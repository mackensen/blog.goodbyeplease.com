<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Goodbye Please</title>
  
  <subtitle>Amtrak, B-Movies, Web Development, and other nonsense</subtitle>
  <link href="https://blog.goodbyeplease.com/atom.xml" rel="self"/>
  
  <link href="https://blog.goodbyeplease.com/"/>
  <updated>2025-02-20T03:07:34.792Z</updated>
  <id>https://blog.goodbyeplease.com/</id>
  
  <author>
    <name>Charles Fulton</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mileage problems on the Long Island Rail Road</title>
    <link href="https://blog.goodbyeplease.com/2024/12/06/Mileage-problems-on-the-Long-Island-Rail-Road/"/>
    <id>https://blog.goodbyeplease.com/2024/12/06/Mileage-problems-on-the-Long-Island-Rail-Road/</id>
    <published>2024-12-06T19:42:44.000Z</published>
    <updated>2025-02-20T03:07:34.792Z</updated>
    
    <content type="html"><![CDATA[<p>Back in July/August 2022 I made a circuit of New York and New England (<a href="https://galleries.goodbyeplease.com/album/Albums-2022-Northeast.html">photo gallery</a>). I had a memorable encounter with a <a href="/2023/11/17/A-warehouse-in-Albany/" title="A warehouse in Albany">a warehouse in Albany</a> on the <em>Ethan Allen Express</em>, drove a boat on Lake Champlain, took my first trip on the Long Island Rail Road, and finally rode the <a href="https://en.wikipedia.org/wiki/Mattapan_Line">Mattapan Line</a>. About a thousand miles by rail: 913 on Amtrak, 66 on the Long Island Rail Road, and uncounted on the New York and Boston subways. Calculating that number led me on a wild side quest similar to the problem I had <a href="/2024/08/26/Measuring-the-Raritan-Valley-Line/" title="Measuring the Raritan Valley Line">with the Raritan Valley Line</a>.</p><p>Calculating mileage for commuter railroads can be tricky because they often don’t publish that information in public schedules. Amtrak did until they stopped putting out printed timetables, and those numbers don’t change often. The 2022 version of the MTA website <em>did</em> publish that information for each station. Here’s <a href="https://web.archive.org/web/20221001204837/http://lirr42.mta.info/stationInfo.php?id=60">Huntington</a>, for example. 34.7 miles from Penn Station. If I travel between two intermediate points I can just diff the numbers and I’m good to go, right?</p><p>I don’t remember exactly when I realized there was a problem. It might have been when I was looking at <a href="https://web.archive.org/web/20220521045251/http://lirr42.mta.info/stationInfo.php?id=9">Woodside</a>, which the MTA website placed at “3.1 miles” from Penn Station. That felt wrong given that Manhattan itself is about two miles wide, and sure enough, some quick playing with the measurement tool on Google Maps showed that 3.1 miles from Woodside didn’t even get you to the East River.</p><p><img src="woodside-to-east-river.jpg" alt="The answer is not 3.1 miles" title="Map of Long Island showing the distance from Woodside to the East River is 3.2 miles. Penn is even further west."></p><p>Before delving into what the right answer is and how I got there, a little sidebar about the topology of the Long Island Rail Road, which is somewhat complicated. There are four western termini: Penn Station and Grand Central Madison in Manhattan, Long Island City in Queens, and Atlantic Terminal in Brooklyn. There are two main lines proceeding east from Long Island City: the <a href="https://en.wikipedia.org/wiki/Main_Line_(Long_Island_Rail_Road)">Main Line</a>, terminating in Greenport, and the <a href="https://en.wikipedia.org/wiki/Montauk_Branch">Montauk branch</a>, terminating in Montauk. The connections to Manhattan diverge from the Main Line prior to Long Island City. Physically, both the Main Line and the Montauk branch run to Jamaica, but the latter does it via a different route that has been freight-only since 2012 and is therefore not shown on public maps.</p><p><img src="LIRR_schematic.svg" alt="Schematic map of the Long Island Rail Road. Original map by User:NE2 with later modifications by users listed below, Public domain, via Wikimedia Commons" title="Schematic map of the Long Island Rail Road"></p><p>A further complexity is the <a href="https://en.wikipedia.org/wiki/Central_Branch_(Long_Island_Rail_Road)">Central branch</a> between Bethpage and Babylon. If you’re reckoning physical distance between Long Island City and Montauk, you have to account for the following variables:</p><ol><li>Are we using the Main Line between Woodside and Jamaica, or the Lower Montauk branch between Long Island City and Jamaica?</li><li>Are we using the Montauk branch between Jamaica and Babylon, or the Main Line via Bethpage?</li></ol><p>Meanwhile, the MTA site simply said that <a href="https://web.archive.org/web/20220527114046/http://lirr42.mta.info/stationInfo.php?id=138">Montauk was 115.8 miles</a> from Penn Station. I’m pretty sure that’s not true, but I wasn’t sure how wrong it even was.</p><h2><span id="measurements">Measurements</span></h2><p>There are good sources for these distances. I looked in two places: employee timetables for the Long Island Railroad (<a href="http://www.trainsarefun.com/lirr/lirrhistoricaldata/LIRRTimeTable4_5-14-2012.pdf">here’s one from 2012</a>), and Official Guides of the Railways from the period when the LIRR was owned by the Pennsylvania Railroad.</p><p><img src="194503-310.jpg" alt="They haven't moved Penn since 1945" title="1945 timetable showing the distance from New York Penn to Jamaica"></p><p>From these we some very useful building blocks:</p><ol><li>It’s 9.3 miles from Atlantic Terminal to Jamaica.</li><li>It’s 9.3 miles from Long Island City to Jamaica via the Main Line.</li><li>It’s 9.0 miles from Long Island City to Jamaica via the Lower Montauk branch.</li><li>It’s 11.3 miles from Penn Station to Jamaica via the Main Line and East River Tunnels.</li></ol><p>It became clear to me as I examined the website that it was using the figures from the internal employee timetables but misrepresenting them as the distance to Penn, where they were actually the distance to Long Island City. They were wrong by either 2 miles or 2.3 miles, depending on whether the mileage of the physical branch the station was on was reckoned via the Main Line or the Lower Montauk branch (an MTA employee confirmed as much to me via a support ticket I opened).</p><p>Given that, I was able to accurately compute the distances I traveled:</p><ul><li>31.6 miles from Woodside to Huntington</li><li>25.4 miles from Huntington to Jamaica</li><li>9.3 miles from Jamaica to Atlantic Terminal</li></ul><p>As an aside, physical distance isn’t really relevant to traveling public. You need to know where a station is and when the trains are. The revised website (<a href="https://new.mta.info/stations/huntington">example</a>) doesn’t include the faulty distance information at all, probably for the best. How the distances are calculated is a reminder that the Long Island Rail Road was built in the 19th century, and that the tunnels under the East River were a later innovation.</p>]]></content>
    
    
    <summary type="html">Another abstruse exercise in calculating railroad mileage</summary>
    
    
    
    <category term="Travel" scheme="https://blog.goodbyeplease.com/categories/Travel/"/>
    
    
    <category term="Long Island Rail Road" scheme="https://blog.goodbyeplease.com/tags/Long-Island-Rail-Road/"/>
    
  </entry>
  
  <entry>
    <title>Pushing to GitHub over 443</title>
    <link href="https://blog.goodbyeplease.com/2024/12/06/Pushing-to-GitHub-over-443/"/>
    <id>https://blog.goodbyeplease.com/2024/12/06/Pushing-to-GitHub-over-443/</id>
    <published>2024-12-06T18:33:39.000Z</published>
    <updated>2025-02-20T03:07:34.804Z</updated>
    
    <content type="html"><![CDATA[<p>I’m working from New York Penn Station today before heading out on the <em>Lake Shore Limited</em> to Michigan. In general this is a positive and productive work environment. My only challenge is that Amtrak WiFi blocks port 22 outbound, so I can’t push my work back to my CI environment on GitHub?</p><p>(What am I working on? A <a href="https://github.com/LafColITS/moodle-local_ws_enrol_manual">Moodle local plugin</a> that exposes the add_instance method of the manual enrollment plugin.)</p><p>Happily, GitHub <a href="https://docs.github.com/en/authentication/troubleshooting-ssh/using-ssh-over-the-https-port">has anticipated</a> this scenario and I don’t have to do anything tricky. I added the following to my local <code>~/.ssh/config</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    Hostname ssh.github.com</span><br><span class="line">    Port 443</span><br><span class="line">    User git</span><br></pre></td></tr></table></figure><p>That’s it! All my existing remotes work the same as before, and I’m in business.</p>]]></content>
    
    
    <summary type="html">How to push to GitHub over SSH if port 22 is blocked.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="GitHub" scheme="https://blog.goodbyeplease.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Packaging a Lambda with Nodejs 20 and AWS SDK for JavaScript v2</title>
    <link href="https://blog.goodbyeplease.com/2024/11/19/Packaging-a-Lambda-with-Nodejs-20-and-AWS-SDK-for-JavaScript-v2/"/>
    <id>https://blog.goodbyeplease.com/2024/11/19/Packaging-a-Lambda-with-Nodejs-20-and-AWS-SDK-for-JavaScript-v2/</id>
    <published>2024-11-19T23:26:12.000Z</published>
    <updated>2025-02-20T03:07:34.801Z</updated>
    
    <content type="html"><![CDATA[<p>Following <a href="/2024/11/13/Devenv-python-and-packaging-Lambdas/" title="Devenv, python, and packaging Lambdas">last week&#39;s fun</a> with packaging Lambdas that use Python, here’s a little puzzle with Node.js.</p><p>I have an outdated project that uses a Lambda originally built on v2 of the <a href="https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/aws-jsdk-reference.html">AWS SDK for JavaScript</a> and which ran on the Node.js 12.x runtime. The minimum supported runtime now is Node.js 18.x, and starting with that version <a href="https://stackoverflow.com/questions/74631684/lambda-function-cant-load-aws-sdk-after-switching-to-18-x">v3 is shipped instead of v2</a>. I spent some time digging into migrating the functionality from v2 to v3, determined that the change wasn’t trivial, and decided to buy myself some time by shipping v2 of the SDK with my Lambda function. I didn’t find any guides on how to do that within an <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-cdk-tutorial.html">AWS CDK project</a>, hence this post.</p><p>The root of my project isn’t the Lambda function, but the project’s entire infrastructure, of which the Lambda function and its code is but a small piece. This is the typical structure:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bin/</span><br><span class="line">lib/</span><br><span class="line">lib/folder-containing-lambda-function/</span><br><span class="line">lib/folder-containing-lambda-function/index.js</span><br><span class="line">test/</span><br><span class="line">package.json</span><br><span class="line">yarn.lock</span><br></pre></td></tr></table></figure><p>CDK will zip up the contents of a specified directory and handle deploying it:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> yourFunction = <span class="keyword">new</span> lambda.<span class="title class_">Function</span>(<span class="variable language_">this</span>, <span class="string">&#x27;LambdaFunction&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">code</span>: <span class="keyword">new</span> lambda.<span class="title class_">AssetCode</span>(<span class="string">&#x27;./lib/folder-containing-lambda-function&#x27;</span>),</span><br><span class="line">  <span class="attr">handler</span>: <span class="string">&#x27;index.handler&#x27;</span>,</span><br><span class="line">  <span class="attr">runtime</span>: lambda.<span class="property">Runtime</span>.<span class="property">NODEJS_20_X</span>,</span><br><span class="line">  <span class="attr">role</span>: <span class="keyword">new</span> iam.<span class="title class_">Role</span>(<span class="variable language_">this</span>, <span class="string">&#x27;LambdaRole&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">assumedBy</span>: <span class="keyword">new</span> iam.<span class="title class_">ServicePrincipal</span>(<span class="string">&#x27;lambda.amazonaws.com&#x27;</span>),</span><br><span class="line">      <span class="attr">managedPolicies</span>: [</span><br><span class="line">      iam.<span class="property">ManagedPolicy</span>.<span class="title function_">fromAwsManagedPolicyName</span>(<span class="string">&quot;service-role/AWSLambdaBasicExecutionRole&quot;</span>),</span><br><span class="line">    ],</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>It feels ugly, but I solved this by creating a stub <code>package.json</code> inside the <code>folder-containing-lambda-function</code> directory and running <code>yarn add aws-sdk@2</code> from there (thus avoiding the problem of it trying to use the <code>package.json</code> from the parent directory). Here’s the package.json:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aws-sdk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>This creates a second <code>node_modules</code> within <code>lib/folder-containing-lambda-function</code>. Unlike the one at root, I actually want to version this for deployment purposes, so I modify the main <code>.gitignore</code> to only exclude the top-level <code>node_modules</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/node_modules/</span><br></pre></td></tr></table></figure><p>Through this entire process I’m not altering the actual code in my Lambda function at all. The SDK (v2) will be unzipped at the root and available in the expected place:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">AWS</span> = <span class="built_in">require</span>(<span class="string">&#x27;aws-sdk&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Under this approach <code>node_modules</code> is 110 MB uncompressed and 15 MB compressed. I want to emphasize that this isn’t a great solution, but I was in a rush and needed to restore functionality, and it worked like a charm. For a proper resolution, I’m considering a few options, including building a Lambda layer with v2 SDK, or refactoring the whole thing using the boto3 library in Python.</p>]]></content>
    
    
    <summary type="html">Including the old AWS SDK in a Lambda function</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="AWS" scheme="https://blog.goodbyeplease.com/tags/AWS/"/>
    
    <category term="CDK" scheme="https://blog.goodbyeplease.com/tags/CDK/"/>
    
    <category term="Lambda" scheme="https://blog.goodbyeplease.com/tags/Lambda/"/>
    
    <category term="Nodejs" scheme="https://blog.goodbyeplease.com/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Devenv, python, and packaging Lambdas</title>
    <link href="https://blog.goodbyeplease.com/2024/11/13/Devenv-python-and-packaging-Lambdas/"/>
    <id>https://blog.goodbyeplease.com/2024/11/13/Devenv-python-and-packaging-Lambdas/</id>
    <published>2024-11-14T02:49:11.000Z</published>
    <updated>2025-02-20T03:07:34.770Z</updated>
    
    <content type="html"><![CDATA[<p>One of the first things I did with Nix flakes and then <a href="https://devenv.sh/">Devenv.sh</a> was standardize the Node environment for my AWS CDK deployments. A related issue that I let slide at the time was Python dependencies for when a project has Lambda functions with Python runtimes.</p><p>My comfort level with Python isn’t very high, and the variety of Python dependency tooling (<a href="https://pypi.org/project/pip/">pip</a>, <a href="https://python-poetry.org/">Poetry</a>, <a href="https://github.com/pyenv/pyenv">pyenv</a>, <a href="https://docs.python.org/3/library/venv.html">venv</a>) leaves me bewildered on a good day. The Lambda functions that I ship aren’t complicated and don’t need many dependencies, although they need to be compatible with the given runtime. A further complexity specific to Lambda functions is that AWS expects the function and its dependencies to be <a href="https://docs.aws.amazon.com/lambda/latest/dg/python-package.html">zipped up together</a>.</p><p>My preferred way to handle that pre-devenv was to use pip with the <code>-t</code> flag, which lets me choose the installation directory. This will install the requested package and its dependencies in that directory, which is perfect for my packaging needs. Devenv has excellent <a href="https://devenv.sh/supported-languages/python/">support for Python</a>, and getting Python 3.12 is easy:</p><p>devenv.nix:</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">l<span class="attr">anguages.python</span> <span class="operator">=</span> &#123;</span><br><span class="line">  <span class="attr">version</span> <span class="operator">=</span> <span class="string">&quot;3.12&quot;</span>;</span><br><span class="line">  <span class="attr">enable</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>devenv.yaml:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inputs:</span></span><br><span class="line">  <span class="attr">nixpkgs-python:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">github:cachix/nixpkgs-python</span></span><br><span class="line">    <span class="attr">inputs:</span></span><br><span class="line">      <span class="attr">nixpkgs:</span></span><br><span class="line">        <span class="attr">follows:</span> <span class="string">nixpkgs</span></span><br></pre></td></tr></table></figure><p>Trouble is, that configuration leave me with working python (good) but no pip (not so good). After some unhelpful googling I started playing around with Poetry, but it felt like overkill for what I was looking to accomplish. Ultimately I decided to try <code>venv</code>:</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l<span class="attr">anguages.python</span> <span class="operator">=</span> &#123;</span><br><span class="line">  <span class="attr">version</span> <span class="operator">=</span> <span class="string">&quot;3.12&quot;</span>;</span><br><span class="line">  <span class="attr">enable</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="attr">venv.enable</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Without venv, this is what my python environment for this project looked like:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(nix:devenv-shell-env) (devenv) $ <span class="built_in">which</span> python</span><br><span class="line">/nix/store/6z1qpvp2pyafhkvzsgfh8ivsy8p27c7m-python3-3.12.7-env/bin/python</span><br><span class="line">(nix:devenv-shell-env) (devenv) $ python --version</span><br><span class="line">Python 3.12.7</span><br><span class="line">(nix:devenv-shell-env) (devenv) $ <span class="built_in">which</span> pip</span><br></pre></td></tr></table></figure><p>With venv, it looks like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(nix:devenv-shell-env) (devenv) $ <span class="built_in">which</span> python</span><br><span class="line">/path/to/project/.devenv/state/venv/bin/python</span><br><span class="line">(nix:devenv-shell-env) (devenv) $ python --version</span><br><span class="line">Python 3.12.7</span><br><span class="line">(nix:devenv-shell-env) (devenv) $ <span class="built_in">which</span> pip</span><br><span class="line">/path/to/project/.devenv/state/venv/bin/pip</span><br><span class="line">(nix:devenv-shell-env) (devenv) $ pip --version</span><br><span class="line">pip 24.3.1 from /path/to/project/.devenv/state/venv/lib/python3.12/site-packages/pip (python 3.12)</span><br></pre></td></tr></table></figure><p>The good news is here that I have pip now, so the immediate problem is solved. I did find myself a little curious about what’s happening in the root <code>.devenv</code> directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-rwxr-xr-x 1 user group  271 Nov 12 22:35 pip</span><br><span class="line">-rwxr-xr-x 1 user group  271 Nov 12 22:35 pip3</span><br><span class="line">-rwxr-xr-x 1 user group  271 Nov 12 22:35 pip3.12</span><br><span class="line">lrwxr-xr-x 1 user group   10 Nov 12 22:35 python -&gt; python3.12</span><br><span class="line">lrwxr-xr-x 1 user group   10 Nov 12 22:35 python3 -&gt; python3.12</span><br><span class="line">lrwxr-xr-x 1 user group   77 Nov 12 22:35 python3.12 -&gt; /nix/store/6z1qpvp2pyafhkvzsgfh8ivsy8p27c7m-python3-3.12.7-env/bin/python3.12</span><br></pre></td></tr></table></figure><p>That’s about what I expected. A symlink back to the same immutable python binary, and the usual pip module (module?) in the project directory. This gets around problems I’d had earlier with enabling pip, which tried to put it in the immutable /nix/ store, which didn’t work. This may have been the obvious solution for someone experienced with Python, but I’m not.</p>]]></content>
    
    
    <summary type="html">Packaging Lambda functions in a Devenv.sh environment</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="AWS" scheme="https://blog.goodbyeplease.com/tags/AWS/"/>
    
    <category term="Nix" scheme="https://blog.goodbyeplease.com/tags/Nix/"/>
    
    <category term="Python" scheme="https://blog.goodbyeplease.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>A visit to the Bridgeview</title>
    <link href="https://blog.goodbyeplease.com/2024/11/10/A-visit-to-the-Bridgeview/"/>
    <id>https://blog.goodbyeplease.com/2024/11/10/A-visit-to-the-Bridgeview/</id>
    <published>2024-11-11T00:44:58.000Z</published>
    <updated>2025-02-20T03:07:34.750Z</updated>
    
    <content type="html"><![CDATA[<p>The <a href="http://bridgeviewbnb.com/">Bridgeview Bed and Breakfast</a> in Marysville, Pennsylvania, is a unique institution. It’s a B&amp;B designed specifically to cater to railfans and their trailing spouses. It’s located on the Susquehanna River, about 700 feet down river from the <a href="https://en.wikipedia.org/wiki/Rockville_Bridge">Rockville Bridge</a>, in the very heart of Norfolk Southern’s operations in Pennsylvania. Norfolk Southern freight trains pass frequently, and once a day in each direction Amtrak’s silvery <em>Pennsylvanian</em> cruises past. Just behind the B&amp;B is the Port Road Branch and Enola Yard. Across the river is the old Pennsylvania Railroad line to Buffalo.</p><p>Everything at the B&amp;B is organized around appreciating this location. There is WiFi, but no telephones nor televisions in the rooms. There’s a sitting room-cum-library facing the Susquehanna, packed with comfortable chairs and railroad books and magazines. There’s a display in that room, with a repeater outside, showing active movements in the vicinity. All the <a href="http://bridgeviewbnb.com/rooms.php">rooms</a> bear names (“Juniata”, “Lehigh”, “Lackawanna”) rich in railroading tradition. It’s quiet at night, if train horns don’t bother you. On that note, the Bridgeview is surely the only hotel whose <a href="http://bridgeviewbnb.com/rates.php">policies</a> state that “Under no circumstances should guests trespass on railroad property, including the embankment across Main Street from the B&amp;B.”</p><p>They advertise in <em>Trains</em> magazine, and we finally decided to try them out in June 2023. The operation itself is decidedly low-tech. The website itself is HTTP only, no HTTPS. You make a reservation by emailing or calling Keith, the proprietor. You mail a check for a deposit and pay the rest on-site. This all worked very smoothly but I’ll cop to some trepidation. I shouldn’t have felt any; Liz and I had a blast. The environment is incredibly chill. You sit on the big deck, watch the river, watch the trains go by. You can read a bit. There are plenty of things to do around Harrisburg. We found the <a href="https://www.theantiquemarketplaceoflemoyne.com/">Antique Marketplace of Lemoyne</a>, <a href="https://www.cupboardmaker.com/">Cupboard Maker Books</a>, and <a href="https://www.home-231.com/">Home 231</a>.</p><p>We meant to go back this year but the summer got away from us. I did finally upload all my pictures: <a href="https://galleries.goodbyeplease.com/album/Albums-2023-Harrisburg.html">https://galleries.goodbyeplease.com/album/Albums-2023-Harrisburg.html</a>. Spoiler: it’s mostly trains and rivers.</p><p><img src="View-from-the-porch.jpg" alt="View of the bridge from the porch." title="Stone masonry bridge crossing a river"></p>]]></content>
    
    
    <summary type="html">A visit to the Bridgeview B&amp;B outside Harrisburg, Pennsylvania.</summary>
    
    
    
    <category term="Travel" scheme="https://blog.goodbyeplease.com/categories/Travel/"/>
    
    <category term="Trains" scheme="https://blog.goodbyeplease.com/categories/Trains/"/>
    
    
    <category term="Norfolk Southern Railway" scheme="https://blog.goodbyeplease.com/tags/Norfolk-Southern-Railway/"/>
    
    <category term="Harrisburg" scheme="https://blog.goodbyeplease.com/tags/Harrisburg/"/>
    
  </entry>
  
  <entry>
    <title>Fifteen years on the Capitol Limited</title>
    <link href="https://blog.goodbyeplease.com/2024/11/10/Fifteen-years-on-the-Capitol-Limited/"/>
    <id>https://blog.goodbyeplease.com/2024/11/10/Fifteen-years-on-the-Capitol-Limited/</id>
    <published>2024-11-10T16:01:29.000Z</published>
    <updated>2025-02-20T03:07:34.774Z</updated>
    
    <content type="html"><![CDATA[<p>2009 was my year of discovery on Amtrak. That January, I made my first run on the <em>Empire Builder</em> (as recounted in <a href="/2023/11/22/My-worst-best-trip-on-the-Empire-Builder/" title="My worst best trip on the Empire Builder">My worst best trip on the Empire Builder</a>) from Chicago to Portland. In June, I took the <em>Lake Shore Limited</em> to Springfield, Massachusetts, starting a long and <a href="/2024/03/16/Fifteen-years-on-the-Lake-Shore-Limited/" title="Fifteen years on the Lake Shore Limited">somewhat complex history</a> with that train. Then, that October, I made my first trip on the <em>Capitol Limited</em>, traveling from Chicago to Washington and back. I’ve made 34 trips on the <em>Capitol Limited</em>, the most I’ve made on any American long-distance train. 23,622 miles is almost enough to circle the globe.</p><p>Today the <em>Capitol Limited</em> disappears from Amtrak’s timetables. This change is meant to be temporary, and is driven by two needs. One, Amtrak is conducting maintenance on the East River Tunnels over the next year and needs to <a href="https://media.amtrak.com/2024/09/amtrak-launching-the-floridian-with-daily-service-between-chicago-and-miami/">reduce the number of movements</a> between Sunnyside Yard and Pennsylvania Station in New York. Two, Amtrak has an <a href="https://www.trains.com/trn/news-reviews/news-wire/amtrak-may-be-planning-to-combine-capitol-limited-and-silver-star-analysis/">on-going shortage</a> of its bilevel Superliner cars. Amtrak’s solution is to take the <em>Silver Star</em>, one of its two New York-Florida trains, and change its northern terminus from New York to Washington. This new train is called the <em><a href="https://en.wikipedia.org/wiki/Floridian_(train)">Floridian</a></em>, and it uses the <em>Silver Star</em>’s single-level equipment.</p><p>I understand the decision and I can’t argue with the logic. The Superliner shortage, whatever its root causes, is real. I have concerns about the timekeeping. It’s a long way from Miami to Chicago–47 hours; 2,076 miles–and there are many opportunities for delays. On the other hand, eliminating the engine change for the <em>Silver Star</em> in Washington probably helps. Running single-level cars on the <em>Capitol Limited</em> may open the door to the long-discussed idea of through cars conveyed in Pittsburgh to the <em><a href="https://en.wikipedia.org/wiki/Pennsylvanian_(train)">Pennsylvanian</a></em>.</p><h2><span id="memories">Memories</span></h2><p>On October 6, 2009, I was in Milwaukee, attending my first-ever HighEdWeb (another venerable institution <a href="https://digicol.org/">going through a rebrand</a>). I left Tuesday afternoon, before the big social event, because I had to be in Washington the next day to prepare for the annual German Studies Association conference. Back then I didn’t have a smart phone and wasn’t carrying a digital camera. My memories are vague. I know I saw <em>some</em> of the <a href="https://en.wikipedia.org/wiki/2009_American_League_Central_tie-breaker_game">American League tie-breaker game</a> between Detroit and Minnesota, but it would have ended well after the <em>Capitol Limited</em> departed Chicago. That pitch hit Inge. Fight me. My strongest memory is sitting in the Sightseer Lounge the next morning, marveling at the fall color along the Youghiogheny and Potomac rivers. My notes say we were six minutes late. On the way back, Liz and I had an encounter with a roughneck in the lower level of the lounge which inspired the “Sharing With The Class” event of the <a href="/2022/11/15/Amtrak-Olympics/" title="Amtrak Olympics">Amtrak Olympics</a>.</p><p>I was back on the <em>Capitol Limited</em> in January 2010 for a trip out to Lafayette College. The next calendar year that I <em>didn’t</em> make at least one trip on it was 2023–yes, even in 2020, I was on it in January before the pandemic struck. It was on a <em>Capitol Limited</em> that I met the late <a href="/2024/04/11/RIP-Jim-Loomis/" title="RIP Jim Loomis">Jim Loomis</a>. I did the early morning transfer to the <em>Pennsylvanian</em> in Pittsburgh for the first time in 2012. Saves a few hours off the Washington-Philadelphia leg, and there’s slightly more cell signal around Altoona than Cumberland. Not as pretty though.</p><p><img src="Amtrak_30_on_the_Magnolia_Cutoff.jpg" alt=" The Capitol Limited exits Graham Tunnel and crosses the Potomac River in Magnolia, West Virginia, in 2011. Photograph by John Mueller, CC BY 2.0." title="Silver and blue locomotive leading cars out of a tunnel surrounded by trees"></p><p>The <em>Capitol Limited</em> of my imagination is the mid-2010s train with a baggage car, 2-3 sleepers, a full diner, a Sightseer Lounge, and 2-3 coaches. The scenery between Pittsburgh and Washington demands an observation car, and it was one of the main reasons I <a href="/2013/03/10/Leaving-the-Lake-Shore/" title="Leaving the Lake Shore">preferred that train</a> to the <em>Lake Shore Limited</em>. Going out to Chicago in a sleeper, you made your dinner reservation from the Metropolitan Lounge. You dined as the darkness fell between Chicago and South Bend. When you wake up in the morning, you’re somewhere near Connellsville, Pennsylvania, following the Youghiogheny. After breakfast you decamp to the Sightseer Lounge and watch the scenery. You pass through horse country heading in to DC. Westbound, dinner’s around Harpers Ferry, parked right on the bridge. In the morning, there’s a ground fog in northern Ohio and Indiana as you rush west to Chicago.</p>]]></content>
    
    
    <summary type="html">Remembering the temporarily gone Capitol Limited</summary>
    
    
    
    <category term="Travel" scheme="https://blog.goodbyeplease.com/categories/Travel/"/>
    
    <category term="Trains" scheme="https://blog.goodbyeplease.com/categories/Trains/"/>
    
    
    <category term="Amtrak" scheme="https://blog.goodbyeplease.com/tags/Amtrak/"/>
    
    <category term="Capitol Limited" scheme="https://blog.goodbyeplease.com/tags/Capitol-Limited/"/>
    
    <category term="Floridian" scheme="https://blog.goodbyeplease.com/tags/Floridian/"/>
    
    <category term="Silver Star" scheme="https://blog.goodbyeplease.com/tags/Silver-Star/"/>
    
  </entry>
  
  <entry>
    <title>Migrating my galleries to GitHub and DigitalOcean</title>
    <link href="https://blog.goodbyeplease.com/2024/10/29/Migrating-my-galleries-to-GitHub-and-DigitalOcean/"/>
    <id>https://blog.goodbyeplease.com/2024/10/29/Migrating-my-galleries-to-GitHub-and-DigitalOcean/</id>
    <published>2024-10-30T02:43:35.000Z</published>
    <updated>2025-02-20T03:07:34.792Z</updated>
    
    <content type="html"><![CDATA[<p>I use <a href="https://thumbsup.github.io/">thumbsup</a> to generate my <a href="https://galleries.goodbyeplease.com/">galleries</a>. That’s worth a whole other post–the short version is that the metadata is written to the images themselves, and then that metadata generates a series of static html pages for albums, tags, and categories. The resulting site is easy to host–no database and a minimum of CSS and Javascript. I’ve used Cloudfront and S3 on Amazon for several years but as I <a href="/2024/10/26/Moving-from-S3-Cloudfront-to-GitHub-pages/" title="Moving from S3+Cloudfront to GitHub pages">previously mentioned</a> I’m moving my stuff off Amazon.</p><p><a href="https://pages.github.com/">GitHub pages</a> isn’t suitable on its own: I have about 13 GB of images. The generated site structure looks like this:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">album/</span><br><span class="line">media/</span><br><span class="line">public/</span><br><span class="line">index.html</span><br></pre></td></tr></table></figure><p>The album directory contains the various generated HTML pages for the albums, categories, and tags. It’s all text and about 20 MB. That can go to GitHub. The public directory is the CSS and Javascript assets from thumbsup and it’s another 1.1 MB. That leaves media.</p><p>I decided to put the images on <a href="https://www.digitalocean.com/products/spaces">DigitalOcean Spaces</a>. I’ve admired DigitalOcean’s documentation for years, though I’ve never used them for anything. Their Spaces offering is very similar to S3, though they built their own solution using <a href="https://docs.digitalocean.com/products/spaces/details/features/">Ceph</a>. I’ll say upfront that the pricing; as I’m using it now, <em>isn’t</em> competitive with Amazon S3. It’s $5/month upfront to “subscribe” to Spaces, which gets you 250 GB of storage. That’s $0.02 per GB, which is what <a href="https://aws.amazon.com/s3/pricing/">S3 costs</a>, but without a minimum commitment. Price isn’t the reason I did this, and I may find other uses. Spaces does have CDN support, but the offering isn’t a full-fledged offering like AWS CloudFront or Cloudflare, so I still needed GitHub for the web hosting.</p><p>To sync the files to Spaces, I used <a href="https://s3tools.org/s3cmd">S3cmd</a>. It can be installed with homebrew. DigitalOcean has <a href="https://docs.digitalocean.com/products/spaces/reference/s3cmd/">good docs</a>. It can actually be used with either Spaces or S3. I’ve run into two minor gotchas:</p><ul><li>Files aren’t publicly readable by default (good), and I need them to be for my use case. I didn’t worry about this before because S3 and CloudFront handled this with an Origin Access Identity. S3cmd supports setting an ACL when synchronizing (<code>--acl-public</code>).</li><li>Full synchronizations feel slower than when going to S3.</li></ul><p>The final issue to solve is that thumbsup doesn’t support an external CDN out of the box. This was tricky, especially as I like testing my galleries locally and didn’t want to hard-code the CDN there. That would lead to a lot of unnecessary remote requests and mean I couldn’t test new albums until I’d synchronized. Ultimately, I customized the GitHub Actions workflow to run a few sed commands against the artifact before it was deployed:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Rewrite</span> <span class="string">image</span> <span class="string">URLs</span></span><br><span class="line"><span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">  sed -i &quot;s/url(&#x27;media/url(&#x27;https:\/\/galleries-goodbyeplease.nyc3.digitaloceanspaces.com\/media/&quot; index.html</span></span><br><span class="line"><span class="string">  sed -i &#x27;s/..\/media/https:\/\/galleries-goodbyeplease.nyc3.digitaloceanspaces.com\/media/&#x27; album/*.html</span></span><br></pre></td></tr></table></figure><p>This is after the Checkout step and before the Setup Pages step. This is hacky, but it’s not a production example of <a href="https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags">using a regular expression to rewrite HTML</a> since it’s merely URL replacement. That’s my defense, and anyway it’s working.</p>]]></content>
    
    
    <summary type="html">Rebuilding my static galleries using GitHub and Digital Ocean.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="DigitalOcean" scheme="https://blog.goodbyeplease.com/tags/DigitalOcean/"/>
    
    <category term="GitHub" scheme="https://blog.goodbyeplease.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Moving from S3+Cloudfront to GitHub pages</title>
    <link href="https://blog.goodbyeplease.com/2024/10/26/Moving-from-S3-Cloudfront-to-GitHub-pages/"/>
    <id>https://blog.goodbyeplease.com/2024/10/26/Moving-from-S3-Cloudfront-to-GitHub-pages/</id>
    <published>2024-10-26T18:04:42.000Z</published>
    <updated>2025-02-20T03:07:34.794Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve used <a href="https://hexo.io/">Hexo</a> to build this site for <a href="/2022/10/30/Adding-a-poster-to-movie-reviews-in-Hexo/" title="Adding a poster to movie reviews in Hexo">two years</a>. At the time, I kept my existing S3+Cloudfront hosting stack with a few minor tweaks. Yesterday I moved the whole thing over to <a href="https://pages.github.com/">GitHub pages</a>.</p><p>I had a few reasons for doing this. One, I’m doing a project at work to roll out GitHub Campus and I want to get more familiar with the architecture. Two, for various reasons I want to be less dependent on the Amazon environment. I figured moving a static site from one architecture wouldn’t be a big deal, and I was right.</p><p>Hexo has a few deployment options. When I was using an S3 bucket I just rsynced the generated output, which won’t work here. The “right way” of handling the deployment would involve pushing source files and letting a GitHub Action build the site.  My local environment is a little unclean–I have some uncommitted package dependencies–so that’s not a great option. I can however use the one-command deployment option with <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>. Per <a href="https://hexo.io/docs/github-pages#One-command-deployment">Hexo’s documentation</a>, you add this to <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class="line">  <span class="comment"># example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></table></figure><p>You then run two commands:</p><ul><li><code>hexo clean</code></li><li><code>hexo deploy</code></li></ul><p>It’s important to run both commands. This approach creates a clone of the GitHub repository in a new <code>.deploy_git</code>  directory in the root of your project folder containing the generated static output, and then push to the remote directory. The clean command deletes and re-creates this directory, allowing the deploy command to push changes as a new commit. If you don’t do clean first, it’ll amend and force-push the last commit.</p><p>In terms of infrastructure, the site <em>almost</em> just worked after I cut over DNS to point at GitHub instead of Cloudfront. I needed to place a <code>CNAME</code> file containing my custom subdomain inside the <code>source/</code> directory; otherwise it was removed on every deployment. Next steps are to think about a better build pipeline, and whether GitHub is a reasonable choice for my <a href="https://galleries.goodbyeplease.com">gallery site</a>.</p>]]></content>
    
    
    <summary type="html">Moving a static site from S3+Cloudfront to GitHub pages.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="Hexo" scheme="https://blog.goodbyeplease.com/tags/Hexo/"/>
    
    <category term="AWS" scheme="https://blog.goodbyeplease.com/tags/AWS/"/>
    
    <category term="GitHub" scheme="https://blog.goodbyeplease.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Looking up the Cloudformation stack for a resource</title>
    <link href="https://blog.goodbyeplease.com/2024/10/14/Looking-up-the-Cloudformation-stack-for-a-resource/"/>
    <id>https://blog.goodbyeplease.com/2024/10/14/Looking-up-the-Cloudformation-stack-for-a-resource/</id>
    <published>2024-10-15T00:15:10.000Z</published>
    <updated>2025-02-20T03:07:34.792Z</updated>
    
    <content type="html"><![CDATA[<p>I have an AWS account with a few dozen Cloudformation stacks deployed. Among other resources are some Route 53 hosted zones, and I was pretty sure that I’d created these manually. I wanted to get them imported into a stack, and then make some changes, but first I needed to be sure that they weren’t part of a stack already. There are enough stacks in this account that manual inspection isn’t a good option.</p><p>Turns out that a good way to do this is with the AWS CLI, and I’d like to thank <a href="https://stackoverflow.com/a/64536833">Nik Rahmel</a> on Stack Overflow for the pointer. You can use the <a href="https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudformation/describe-stack-resources.html">describe-stack-resources</a> command and pass the <code>PhysicalResourceId</code> of the resource instead of the <code>StackName</code>. Here’s an example of querying a Route 53 hosted zone:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aws cloudformation describe-stack-resources --physical-resource-id Z99999999AAAAAAAAAAAA</span><br></pre></td></tr></table></figure><p>If the resource <em>isn’t</em> part of a stack, you’ll get a response like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">An error occurred (ValidationError) when calling the DescribeStackResources operation: Stack <span class="keyword">for</span> Z99999999AAAAAAAAAAAAdoes not exist</span><br></pre></td></tr></table></figure><p>If the resource <em>is</em> part of a stack, you’ll get an array of JSON objects describing al the resources in the stack; the <code>StackName</code> will be one of the returned elements:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;StackResources&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;StackName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YourStackName&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;StackId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:cloudformation:us-east-1:111122223333:stack/YourStackName/XXXX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;LogicalResourceId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CDKMetadata&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;PhysicalResourceId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;XXXX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ResourceType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AWS::CDK::Metadata&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-07-03T15:09:13.054000+00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ResourceStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UPDATE_COMPLETE&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;DriftInformation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;StackResourceDriftStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NOT_CHECKED&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>There’s at least one gotcha I’ve noticed. The result is the same whether a) the resource exists but is not in a stack, and b) the resource doesn’t exist at all.</p>]]></content>
    
    
    <summary type="html">How to find if an AWS resource is associated with a Cloudformation stack.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="AWS" scheme="https://blog.goodbyeplease.com/tags/AWS/"/>
    
    <category term="Cloudformation" scheme="https://blog.goodbyeplease.com/tags/Cloudformation/"/>
    
    <category term="AWS CLI" scheme="https://blog.goodbyeplease.com/tags/AWS-CLI/"/>
    
  </entry>
  
  <entry>
    <title>How to install the free version of Advanced Custom Fields with Composer</title>
    <link href="https://blog.goodbyeplease.com/2024/10/14/How-to-install-the-free-version-of-Advanced-Custom-Fields-with-Composer/"/>
    <id>https://blog.goodbyeplease.com/2024/10/14/How-to-install-the-free-version-of-Advanced-Custom-Fields-with-Composer/</id>
    <published>2024-10-14T14:33:07.000Z</published>
    <updated>2025-02-20T03:07:34.789Z</updated>
    
    <content type="html"><![CDATA[<p><em>As of October 22, 2024, ACF now supports <a href="https://www.advancedcustomfields.com/resources/installing-acf-with-composer/">installing ACF and ACF Pro via Composer</a>. This blog post remains up for historical reasons.</em></p><p>On Saturday, October 12, Matt Mullenweg usurped the popular Advanced Custom Fields plugin on the WordPress.org plugin repository and rebranded it as “Secure Custom Fields” while retaining the original plugin. I’ve written <a href="/2024/10/12/The-call-is-coming-from-inside-the-house/" title="The call is coming from inside the house">at length</a> about why he shouldn’t have done that and the <a href="/2024/10/13/Fear-uncertainty-and-doubt/" title="Fear, uncertainty, and doubt">broader consequences</a> of that action.</p><p>This post is devoted to a far more prosaic question: how do I, as a person using Composer to bundle a WordPress deployment, install the free version of Advanced Custom Fields?</p><p>Normally, the easiest way to do this would be using the <a href="https://wpackagist.org/">WordPress Packagist</a> mirror, but because of the usurpation of the plugin it’s no longer a reliable source:</p><ul><li><code>&quot;wpackagist-plugin/advanced-custom-fields&quot;:&quot;6.3.6.1&quot;</code>: last version of WP Engine-developed ACF</li><li><code>&quot;wpackagist-plugin/advanced-custom-fields&quot;:&quot;6.3.6.2&quot;</code>: first version of “Secure Custom Fields”</li></ul><p>Advanced Custom Fields hosting version <code>6.3.8</code> on their website and they’ve <a href="https://www.advancedcustomfields.com/blog/installing-and-upgrading-to-the-latest-version-of-acf/">made a post</a> explaining the situation. This version sets up ACF, not WordPress.org, as the source of further updates. For the moment, the manual download link (<a href="https://www.advancedcustomfields.com/latest/">https://www.advancedcustomfields.com/latest/</a>) isn’t versioned. Hopefully that’ll change going forward. The entire situation is changing rapidly. Given that link, you can use Composer’s <a href="https://getcomposer.org/doc/05-repositories.md#package-2">Package repository type</a> to wrap metadata around the download. Working example:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;repositories&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;package&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;package&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wpengine/advanced-custom-fields&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.3.8&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dist&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://www.advancedcustomfields.com/latest/&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zip&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;extra&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;installer-name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;advanced-custom-fields&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;require&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;composer/installers&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~1.0 || ~2.0&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wordpress-plugin&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;config&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;allow-plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;composer/installers&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;require&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;wpengine/advanced-custom-fields&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.3.8&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;composer/installers&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.3&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;extra&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;installer-paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;public/wp-content/plugins/&#123;$name&#125;&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;type:wordpress-plugin&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Let me reemphasize that this solution is <em>fragile</em>. I expect the ACF download link to change in the next few weeks, if not sooner. You’ll want to monitor whether that link is still providing version 6.3.8. For longer term solutions, you may want to consider running a local <a href="https://github.com/composer/satis">Satis</a> server, or pursuing some other manual solution. If you need to have a working deployment stack <em>right now</em>, this option should work for you.</p>]]></content>
    
    
    <summary type="html">Temporary solution for installing the WP Engine supported version of ACF with Composer.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="WordPress" scheme="https://blog.goodbyeplease.com/tags/WordPress/"/>
    
    <category term="Composer" scheme="https://blog.goodbyeplease.com/tags/Composer/"/>
    
    <category term="Advanced Custom Fields" scheme="https://blog.goodbyeplease.com/tags/Advanced-Custom-Fields/"/>
    
  </entry>
  
  <entry>
    <title>Fear, uncertainty, and doubt</title>
    <link href="https://blog.goodbyeplease.com/2024/10/13/Fear-uncertainty-and-doubt/"/>
    <id>https://blog.goodbyeplease.com/2024/10/13/Fear-uncertainty-and-doubt/</id>
    <published>2024-10-14T01:19:20.000Z</published>
    <updated>2025-02-20T03:07:34.774Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Fear,_uncertainty,_and_doubt">Fear, uncertainty, and doubt</a> (FUD) is as old as time. In a nutshell, it’s a disinformation tactic. You put out false information, engendering fear, in the hope that you can manipulate people toward a particular outcome favorable to you. No, I’m not talking about Donald Trump and the 2024 US election. I’m talking about Matt Mullenweg, WordPress.org, and Automattic over the last month.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p>My introduction to FUD was in the late 1990s. I was in high school, I was playing around with Linux, and I was a regular poster on <a href="https://slashdot.org/">Slashdot</a>. This was the high-water point of Microsoft trying to undermine public confidence in open source in general and Linux in particular. This was the period of the “<a href="https://en.wikipedia.org/wiki/Halloween_documents">Halloween documents</a>” and <a href="https://en.wikipedia.org/wiki/SCO_Group,_Inc._v._International_Business_Machines_Corp."><em>SCO v. IBM</em></a>. Rather than compete on the technical merits, Microsoft sought to create an environment where companies were afraid to adopt open source technologies because of nebulous licensing or patent concerns. The fact that these efforts ultimately failed doesn’t change how much time and money was spent combatting them. The opportunity cost was high.</p><p>Which brings me back to WordPress. I wrote yesterday (“<a href="/2024/10/12/The-call-is-coming-from-inside-the-house/" title="The call is coming from inside the house">The call is coming from inside the house</a>”) about Matt Mullenweg’s seizure of Advanced Custom Fields on the WordPress.org plugins repository. I mentioned in passing that he also <a href="https://wordpress.org/news/2024/09/wp-engine-banned/">banned</a> WP Engine from the repository. Something I didn’t mention is that logging into WordPress.org now requires you to attest that “I am not affiliated with WP Engine in any way, financially or otherwise.”</p><p><img src="wordpress-org-attestation.png" alt="Are you, or have you ever been, affiliated with WP Engine?" title="Login form requiring you to attest that you are not affiliated with WP Engine"></p><p>This is a classic example of FUD. What does it mean to be affiliated with WP Engine, financially or otherwise? Is this limited to employees of WP Engine and investors in the company? What about people who host their sites on WP Engine or Flywheel? What if you, or your company, owns an Advanced Custom Fields Pro license? Never mind that many people who own ACF licenses bought them two acquisitions ago.<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> Does that qualify as affiliation? If my company has an Akismet license, does that mean I’m “affiliated” with Automattic? Nothing in the <a href="https://akismet.com/tos/">terms of service for Akismet</a> says so.</p><p>I am not a lawyer. The above isn’t a question that would normally concern me. However, Mullenweg’s approach toward WP Engine has been aggressive, both in conduct and tone. The <a href="https://techcrunch.com/2024/10/04/159-employees-are-leaving-automattic-as-ceos-fight-with-wp-engine-escalates/?guccounter=1">departure of 8.4% of Automattic’s employees</a>, and the reports of people being blocked on Twitter and removed from the official WordPress Slack, suggest that the important thing right now is picking a side. I suspect I speak for most downstream users of WordPress when I say that I’m not interested in picking a side between Mullenweg and WP Engine. That’s not my fight and I derive no benefit from it.</p><p>Mullenweg has created a situation where I’m not sure if by logging into WordPress.org I’m placing myself in the wrong. In my opinion, this is deliberate. ACF is an important plugin; creating uncertainty around its use is a way to hurt WP Engine. Witness all the ballyho around “Secure Custom Fields”; the name alone implies that that ACF is in some way insecure. This isn’t true, <a href="https://timnash.co.uk/advisory-advanced-custom-fields-changes/">as this excellent post</a> from Tim Nash makes clear. Still, some damage is no doubt done. Going forward, there are at least <em>three</em> plugins providing similar functionality:</p><ul><li>Advanced Custom Fields 6.3.6.1: the last version of the free ACF plugin developed by WP Engine and released through WordPress.org. Contains an upsell to Advanced Custom Fields Pro. Auto-upgrade path is to Secure Custom Fields.</li><li>Secure Custom Fields 6.3.6.2: the latest version on WordPress.org. Usurped by Mullenweg, with the upsell to Advanced Custom Fields Pro removed.</li><li>Advanced Custom Fields 6.3.8: the current free version of the ACF plugin, still developed by WP Engine and available through its official website. Removed the dependency on WordPress.org. <a href="https://www.advancedcustomfields.com/blog/installing-and-upgrading-to-the-latest-version-of-acf/">Requires a one-time manual step by site owners to install</a>.</li></ul><p>Sorry if you’re a WordPress administrator and you had other plans for mid-October. If you’re part of the ACF ecosystem, you’re having to consider questions that would have seemed foreign a month ago, such as whether I’m placing myself in legal jeopardy by logging in to WordPress.org. Are further steps coming? Will “affiliated” people be banned from downloading plugins from WordPress.org? It sounds ridiculous, but as I said yesterday I see no evidence of limiting principles. It’s important to recognize that all the FUD surrounding WP Engine and Advanced Custom Fields has a single source, and that Mullenweg’s <a href="https://techcrunch.com/2024/09/22/matt-mullenweg-calls-wp-engine-a-cancer-to-wordpress-and-urges-community-to-switch-providers/">explicit goal</a>  in this campaign is to weaken a competitor.</p><p>I don’t <em>want</em> to pick a side. I want to work on my actual job, which does not involve getting dragged into a fight between two hosting companies. Mullenweg has created legal uncertainty where none existed previously, and I’m concerned about future developments. No one asked for this and it’s hard to see how anyone benefits.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Mullenweg says WordPress.org “<a href="https://www.theverge.com/2024/10/4/24262232/matt-mullenweg-wordpress-org-wp-engine">belongs to me personally</a>”, so I’m not going to distinguish him from th e platform. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>Elliott Condon <a href="https://deliciousbrains.com/epic-wordpress-announcement/">sold ACF to Delicious Brains</a> in June 2021. WP Engine bought Delicious Brains <a href="https://deliciousbrains.com/wp-engine-acquisition/">a year later</a>. <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">Mullenweg&#39;s FUD campaign against WP Engine and why it matters.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="WordPress" scheme="https://blog.goodbyeplease.com/tags/WordPress/"/>
    
    <category term="Advanced Custom Fields" scheme="https://blog.goodbyeplease.com/tags/Advanced-Custom-Fields/"/>
    
  </entry>
  
  <entry>
    <title>The call is coming from inside the house</title>
    <link href="https://blog.goodbyeplease.com/2024/10/12/The-call-is-coming-from-inside-the-house/"/>
    <id>https://blog.goodbyeplease.com/2024/10/12/The-call-is-coming-from-inside-the-house/</id>
    <published>2024-10-12T22:05:41.000Z</published>
    <updated>2025-02-20T03:07:34.837Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve written a few times about challenges with plugins on <a href="http://WordPress.org">WordPress.org</a>. Eleven years ago, as a comparative newcomer to WordPress, I wrote “<a href="/2013/02/28/Draining-the-swamp/" title="Draining the swamp">Draining the swamp</a>,” about a difficulty with an abandoned plugin. Later, I wrote “<a href="/2015/02/28/The-Changelog-Is-A-Lie/" title="The Changelog Is A Lie">The Changelog Is A Lie</a>” after a user usurped a plugin, hollowed it out, and replaced it with something else. I never thought we’d be in the situation that we are today, where <a href="http://WordPress.org">WordPress.org</a> has undermined the trust in the WordPress.org plugin repository. As they first said in <a href="https://letterboxd.com/film/black-christmas/"><em>Black Christmas</em></a>, the call is coming from inside the house.</p><p>It’s beyond the scope of this post to fully review the dispute between Matt Mullenweg and WP Engine (see <a href="https://www.theverge.com/2024/10/4/24262232/matt-mullenweg-wordpress-org-wp-engine">this article in <em>The Verge</em></a> for a good summary as of October 4). The latest development is that Mullenweg has <a href="https://wordpress.org/news/2024/10/secure-custom-fields/">usurped</a> the free version of Advanced Custom Fields on the WordPress.org repository. The official announcement implies that the ACF team abandoned the plugin. This is inaccurate at best: Mullenweg <a href="https://wordpress.org/news/2024/09/wp-engine-banned/">banned</a> the WP Engine developers from the WordPress.org repository, and blocked WP Engine-hosted sites from accessing it. Under the circumstances, switching the updating mechanism away from <a href="http://WordPress.org">WordPress.org</a> was the only responsible course of action available.</p><p>It’s a neat trick. You ban a developer from the repository, <em>then</em> announce that you’ve found a security issue, don’t let them release a patch for that issue, and then usurp the plugin because they haven’t fixed the issue. A <a href="https://x.com/WordPress/status/1845179613783142426">tweet from WordPress</a> claims justification under <a href="https://github.com/wordpress/wporg-plugin-guidelines/blob/trunk/guideline-18.md">Guideline 18</a> of the plugin guidelines. It’s difficult to see how that guideline justifies this action. The developer hasn’t abandoned the plugin. The security issue wasn’t serious, and it’s been fixed. Put another way, if this is justifiable under Guideline 18, then there is no limiting principle.</p><p>If you look at the free version of <a href="https://wordpress.org/plugins/advanced-custom-fields/">Advanced Custom Fields</a> on WordPress.org now, you’ll see that it’s called “Secure Custom Fields.” The description when you search for it says that “Secure Custom Fields is a free fork of the Advanced Custom Fields plugin created originally for security updates, but now includes functionality improvements…” The plugin description page itself gives no indication that this has been a WordPress.org plugin for approximately five hours. The <a href="https://wordpress.org/plugins/advanced-custom-fields/#developers">changelog</a> for version 6.3.6.2 blandly says the following:</p><blockquote><p>Security – Harden fix in 6.3.6.1 to cover $_REQUEST as well.<br>Fork – Change name of plugin to Secure Custom Fields.</p></blockquote><p>This is also misleading. The <a href="https://plugins.trac.wordpress.org/changeset?sfp_email=&amp;sfph_mail=&amp;reponame=&amp;new=3167679%40advanced-custom-fields&amp;old=3164480%40advanced-custom-fields&amp;sfp_email=&amp;sfph_mail=">actual change</a> is quite significant. Once you install this update, which will be automatically offered to you from the WordPress admin, your contact with WP Engine/Delicious Brains is broken. You’re now using WordPress.org’s fork, and you don’t have a choice. This is because WordPress.org retained the <code>advanced-custom-fields</code> slug, which allows them to retain all the users and reviews of the original plugin for their “fork.”</p><p>This is a profoundly destabilizing action for the WordPress plugin ecosystem. In effect, WordPress.org has seized the plugin of a competitor over that competitor’s objections. This isn’t forking–forking would be releasing a copy of the plugin using the <code>secure-custom-fields</code> slug and inviting uses to switch. There are now two WordPress plugins with the same slug and same purpose: the “genuine” <a href="https://www.advancedcustomfields.com/">Advanced Custom Fields</a>, available from its own website, and Secure Custom Fields, available on <a href="http://WordPress.org">WordPress.org</a>. This situation is ripe for trademark confusion, which is ostensibly why Mullenweg went after WP Engine in the first place. This is a terrible outcome for the average WordPess user.</p><h2><span id="now-what">Now what?</span></h2><p>I’ve been critical before of the <a href="https://wordpress.org/plugins/">WordPress.org plugin repository</a>, because it forced developers into an arcane SVN workflow for plugin releases. For my own deployments I use Composer (see <a href="/2017/07/07/Overlaying-dependency-management/" title="Overlaying dependency management">Overlaying dependency management</a>); packages from <a href="http://WordPress.org">WordPress.org</a> are filtered through the <a href="https://wpackagist.org/">Wpackagist.org</a> platform. We’ve done this for the better part of a decade. Now, for the first time, I’m worried. The ACF usurpation doesn’t immediately affect me because we use the pro version, which isn’t hosted on WordPress.org. However, I don’t get a warm fuzzy feeling when the most important plugin we use is at the center of a very public fight between the owner (?) of WordPress and the owner of the plugin. Do I need to worry about updates to core WordPress that interfere with Advanced Custom Fields Pro? A week ago I would have said that was outlandish. Now? Do I need to go over core updates with a fine-toothed comb?</p><p>We run our WordPress environments in such a way that WordPress <em>can’t</em> auto-update. That’s by choice, as a security measure: Apache shouldn’t write to its own document root. If we weren’t doing that, I’d be worried about what kind of updates might be pushed automatically. WordPress has done forced security updates before for critical vulnerabilities. This practice was controversial even before the current dispute. Now, there’s the real possibility that if you’re connected to WordPress.org you don’t really have control over what gets installed. That’s fine for managed hosting, but this isn’t managed hosting. This isn’t <a href="http://WordPress.com">WordPress.com</a>. If I’m a business in the WordPress hosting/development space I’m deeply concerned about the viability of my business model.</p><p>For those of us on the sidelines, there are medium- and long-term issues to consider. The medium-term issue is how do we obtain our plugins if we have trust issues with WordPress.org? Do we have a fallback plan if our favorite plugin is yanked from the repository or our hosting partner is blocked from it? Is our review process thorough enough to catch these issues?</p><p>The long-term issue is whether it’s a good idea to stay on WordPress at all.</p>]]></content>
    
    
    <summary type="html">When you have trust issues with a project&#39;s plugin repository.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="WordPress" scheme="https://blog.goodbyeplease.com/tags/WordPress/"/>
    
    <category term="Advanced Custom Fields" scheme="https://blog.goodbyeplease.com/tags/Advanced-Custom-Fields/"/>
    
  </entry>
  
  <entry>
    <title>That vacant stare</title>
    <link href="https://blog.goodbyeplease.com/2024/10/03/That-vacant-stare/"/>
    <id>https://blog.goodbyeplease.com/2024/10/03/That-vacant-stare/</id>
    <published>2024-10-04T00:52:37.000Z</published>
    <updated>2025-02-20T03:07:34.823Z</updated>
    
    <content type="html"><![CDATA[<p>On a shelf on a Barrister bookcase in my library, between <a href>Leonard Mosley’s</a> <em>The Druid</em> and <a href="https://en.wikipedia.org/wiki/Marie_Vassiltchikov">Marie Vassiltchikov’s</a> Berlin diaries, is the 1941 edition of William L. Shirer’s <a href="https://en.wikipedia.org/wiki/Berlin_Diary"><em>Berlin Diary</em></a>. Shirer was an American journalist who spent 1934-1940 reporting from Nazi Germany. Although he subsequently authored several books, his real value is as an eyewitness to what was happening there and his impressions of the people.</p><p>His entry for August 9, 1939, records a conversation with a “World War [I] officer of proved patriotism.” Germany’s unprovoked invasion of Poland is three weeks in the future. In March, Germany had abrogated the Munich agreement and occupied Prague, along with the rest of Czechoslovakia. Shirer records the officer asking of him:</p><blockquote><p>Why do the English butt in on Danzig and threaten war over the return of a German city? Why do the Poles [sic] provoke us? Haven’t we the right to a German city like Danzig?</p></blockquote><p>Shirer records turning the question back to the officer:</p><blockquote><p>“Have you the right to a Czech city like Prague?” I asked. Silence. No answer. That vacant stare you get on Germans.</p></blockquote><p>I’ve been thinking about that passage this week, after finding out that someone I’ve known and worked with for a long time is an out-and-out Trump supporter, and believes some wild things. That this person is a Republican I was sure of for a long time. In the same way that you don’t open a wall looking for water damage, I didn’t want to probe any deeper, but it all came out.</p><p>It happened because we were at dinner, and my friend noted that gatherings in his neighborhood had stopped because of political disagreements. He wondered why people couldn’t get along, and take care of each other. After some soul-searching, I pointed out that political disagreements are one thing, but if one party is actively pushing an agenda that promises to cause real harm to vulnerable people, that doesn’t make for a pleasant afternoon. I didn’t quite get a vacant stare, but I didn’t get through either.</p><p>Later in the conversation, my friend spoke at some length on the dangers of illegal immigrants (we don’t know how many are in the country), and brought up a parade of horribles about various crimes committed by said immigrants. The logic being that any crime (including traffic violations) committed by an illegal immigrant is especially horrible, because they shouldn’t be here. I suppose this is the Fox News effect; he’s actually afraid for his safety. My pointing out that violent crime has gone down for 20 years made no impression.</p><p>I thought the closest I got to breaking through was asking him, given everything, if he really thought Trump was the man to make him feel safe. Trump, the convicted felon, vs Harris, the former prosecutor (my discomfort with police aside, this wasn’t that conversation). What really got me here is that this man is a good father, a good husband, and a person of unimpeachable personal integrity. I think his answer really came down to outright fear. If you’ve accepted that worldview then Harris won’t be the answer. If you really think it’s your own personal safety on the line, and that of your family, then I suppose the fact that <em>other people will be placed in danger if your guy wins</em> doesn’t register. Not for him anyway.</p><p>When you find out a friend has gone Trump you first have to deal with the immediate incident. A conversation that went in directions you didn’t expect and didn’t like. Maybe some awful post on Facebook, if you’re still on Facebook. It doesn’t end there. Every time Trump or his supporters does or says something terrible, you remember your friend. You consider asking him (or her) what they think of that.</p><p>You don’t, because you’ll just get that vacant stare (or its electronic equivalent).</p><p>I think this is ultimately why people just start cutting Trump supporters out of their lives. It’s not a matter of disagreement–disagreement can be borne–they inhabit a false reality and are prepared to endorse terrible things based on their perception of that reality. There’s nothing you can do to change their minds, and you just make yourself unhappy thinking about it.</p>]]></content>
    
    
    <summary type="html">On losing friends in the age of Trump.</summary>
    
    
    
    <category term="History" scheme="https://blog.goodbyeplease.com/categories/History/"/>
    
    
  </entry>
  
  <entry>
    <title>Notes on Cypress and visual regression testing</title>
    <link href="https://blog.goodbyeplease.com/2024/09/17/Notes-on-Cypress-and-visual-regression-testing/"/>
    <id>https://blog.goodbyeplease.com/2024/09/17/Notes-on-Cypress-and-visual-regression-testing/</id>
    <published>2024-09-17T23:02:27.000Z</published>
    <updated>2025-02-20T03:07:34.798Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been playing around with <a href="https://www.cypress.io/">Cypress</a> for end-to-end testing ever since I heard Paul Gilzow’s talk on the subject (“<a href="https://2024.wpcampus.org/schedule/introduction-to-automated-end-to-end-testing/">Introduction to Automated End-to-End Testing</a>”) at the 2024 WPCampus conference. We did a pilot <a href="/2014/06/05/Wait-let-me-finish/" title="Wait, let me finish!">ten years ago</a> to implement some limited E2E testing using Behat but it didn’t get very far. Building your own Behat suite without core support was a heavy lift (our Moodle plugins are a different matter).</p><p>We did build out some functional testing for our Microsite, which is a static copy of our WordPress theme, implemented in Twig. I took the opportunity of yet another chromium/selenium issue to reimplement our tests in Cypress, and to add visual regression testing for our components. An added complexity is that the tests need to work cross-platform: in developer local environments and in our continuous integration environment. It’s working, but there were a few challenges.</p><p>First, I got started by installing the <a href="https://www.npmjs.com/package/cypress-visual-regression">Cypress Visual Regression</a> package. Unsurprisingly, you’ll need the virtual framebuffer (<code>xvfb</code>) package installed. You’ll also want a consistent headless browser across all systems. Chrome is an easy answer, but I’m sure others would have worked. This is what my CI configuration looked like on a Debian-derived container:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">apt-get</span> <span class="string">update</span> <span class="string">-y</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">apt-get</span> <span class="string">install</span> <span class="string">-y</span> <span class="string">libgtk2.0-0</span> <span class="string">libgtk-3-0</span> <span class="string">libgbm-dev</span> <span class="string">libnotify-dev</span> <span class="string">libnss3</span> <span class="string">libxss1</span> <span class="string">libasound2</span> <span class="string">libxtst6</span> <span class="string">xauth</span> <span class="string">xvfb</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">wget</span> <span class="string">https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">apt</span> <span class="string">install</span> <span class="string">-y</span> <span class="string">./google-chrome-stable_current_amd64.deb</span></span><br></pre></td></tr></table></figure><p>I wound up making a number of changes to the default configuration in my <code>cypress.config.js</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&quot;cypress&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; configureVisualRegression &#125; = <span class="built_in">require</span>(<span class="string">&#x27;cypress-visual-regression&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">trashAssetsBeforeRuns</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">viewportHeight</span>: <span class="number">720</span>,</span><br><span class="line">  <span class="attr">viewportWidth</span>: <span class="number">1280</span>,</span><br><span class="line">  <span class="attr">video</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">e2e</span>: &#123;</span><br><span class="line">    <span class="attr">env</span>: &#123;</span><br><span class="line">      <span class="attr">visualRegressionType</span>: <span class="string">&#x27;regression&#x27;</span>,</span><br><span class="line">      <span class="attr">visualRegressionDiffDirectory</span>: <span class="string">&#x27;cypress/snapshots/diff&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">screenshotsFolder</span>: <span class="string">&#x27;./cypress/snapshots/actual&#x27;</span>,</span><br><span class="line">    <span class="title function_">setupNodeEvents</span>(<span class="params">on, config</span>) &#123;</span><br><span class="line">      <span class="comment">// implement node event listeners here</span></span><br><span class="line">      <span class="title function_">on</span>(<span class="string">&#x27;before:browser:launch&#x27;</span>, <span class="function">(<span class="params">browser, launchOptions</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (browser.<span class="property">name</span> === <span class="string">&#x27;chrome&#x27;</span> &amp;&amp; browser.<span class="property">family</span> === <span class="string">&#x27;chromium&#x27;</span>) &#123;</span><br><span class="line">          launchOptions.<span class="property">args</span>.<span class="title function_">push</span>(<span class="string">&#x27;--force-color-profile=srgb&#x27;</span>);</span><br><span class="line">          launchOptions.<span class="property">args</span>.<span class="title function_">push</span>(<span class="string">&#x27;--font-render-hinting=none&#x27;</span>);</span><br><span class="line">          launchOptions.<span class="property">args</span>.<span class="title function_">push</span>(<span class="string">&#x27;--force-device-scale-factor=1&#x27;</span>)</span><br><span class="line">          launchOptions.<span class="property">args</span>.<span class="title function_">push</span>(<span class="string">&#x27;--headless&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> launchOptions</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="title function_">configureVisualRegression</span>(on)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>These changes all come down to the fact that a Mac laptop with a Retina display will produce a different screenshot than headless Chrome in a CI environment. Assuming you’re allowing a 0.05% variation, different fonts or a different number of pixels will easily cause a failure. Fortunately, we can eliminate that behavior by forcing the two systems to behave the same.</p><p>One other important note here. To activate the Chrome-specific flags, you need to specifically invoke Chrome when running tests, like so:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx cypress run --browser chrome</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Notes from setting up visual regression testing with Cypress.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="Cypress" scheme="https://blog.goodbyeplease.com/tags/Cypress/"/>
    
  </entry>
  
  <entry>
    <title>Old PHP versions in devenv</title>
    <link href="https://blog.goodbyeplease.com/2024/08/29/Old-PHP-versions-in-devenv/"/>
    <id>https://blog.goodbyeplease.com/2024/08/29/Old-PHP-versions-in-devenv/</id>
    <published>2024-08-29T22:48:43.000Z</published>
    <updated>2025-02-20T03:07:34.801Z</updated>
    
    <content type="html"><![CDATA[<p>I maintain a project that still uses PHP 7.4 (long story) so I need to build out my local environment with that version. Sourcing a Nix package for PHP 7.4 isn’t an issue; the <a href="https://github.com/fossar/nix-phps">nix-phps</a> repository maintains PHP 5.6-PHP 8.4. The tricky part was adding that package to my local <a href="https://devenv.sh/">devenv.sh</a> environment. Devenv <a href="https://devenv.sh/supported-languages/php/">supports PHP</a>, but by default the PHP versions are limited to what’s in the <a href="https://github.com/cachix/devenv-nixpkgs/tree/rolling">devenv-nixpkgs repository</a>, which starts at PHP 8.0.</p><p>I went down a few blind alleys, followed some outdated documentation, and generally overthought this. Devenv has <em>awareness</em> of older PHP versions; they’re simply not enabled by default. The first thing you need to do is enable the nix-phps repository. You can do that with this command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">devenv inputs add phps github:fossar/nix-phps --follows nixpkgs</span><br></pre></td></tr></table></figure><p>That adds the following block to your <code>devenv.yaml</code> file:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">phps:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">github:fossar/nix-phps</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">nixpkgs:</span></span><br><span class="line">      <span class="attr">follows:</span> <span class="string">nixpkgs</span></span><br></pre></td></tr></table></figure><p>I thought that I need to muck around with inputs and imports, but I didn’t, because the devenv PHP support can interpret a request for an older version and will look for the nix-phps repository if you’ve enabled it. This is what a working PHP language block looks like:</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">l<span class="attr">anguages.php</span> <span class="operator">=</span> &#123;</span><br><span class="line">  <span class="attr">enable</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="attr">extensions</span> <span class="operator">=</span> [</span><br><span class="line">    <span class="string">&quot;yaml&quot;</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="attr">version</span> <span class="operator">=</span> <span class="string">&quot;7.4&quot;</span>;</span><br><span class="line">  <span class="attr">package</span> <span class="operator">=</span> pkgs.php.buildEnv &#123;</span><br><span class="line">    <span class="attr">extraConfig</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="string">      sendmail_path = <span class="subst">$&#123;config.services.mailpit.package&#125;</span>/bin/mailpit sendmail</span></span><br><span class="line"><span class="string">      smtp_port = 1025</span></span><br><span class="line"><span class="string">    &#x27;&#x27;</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Declaring the version is enough; I don’t need to specify the package itself. I also don’t need to declare the extension within the <code>buildEnv</code> argument because I did it in <code>languages.php.extensions</code>.</p><p>And that’s it:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(nix:devenv-shell-env) (devenv) $ php -v</span><br><span class="line">PHP 7.4.33 (cli) (built: Oct 31 2022 10:36:16) ( NTS )</span><br><span class="line">(nix:devenv-shell-env) (devenv) $ php -m | grep yaml</span><br><span class="line">yaml</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Using packages from nix-phps in devenv.sh</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="Nix" scheme="https://blog.goodbyeplease.com/tags/Nix/"/>
    
    <category term="PHP" scheme="https://blog.goodbyeplease.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Running Moodle cron in devenv</title>
    <link href="https://blog.goodbyeplease.com/2024/08/27/Running-Moodle-cron-in-devenv/"/>
    <id>https://blog.goodbyeplease.com/2024/08/27/Running-Moodle-cron-in-devenv/</id>
    <published>2024-08-27T14:42:28.000Z</published>
    <updated>2025-02-20T03:07:34.820Z</updated>
    
    <content type="html"><![CDATA[<p>I have a Moodle development project coming up and this is a good a time as any to experiment with setting up a Moodle environment in <a href="http://devenv.sh">devenv.sh</a>. One immediate issue is that Moodle depends on <a href="https://docs.moodle.org/404/en/Cron#Scheduling_tasks">background tasks</a> running almost constantly. Devenv has a set of supported <a href="https://devenv.sh/services/">services</a> and cron isn’t one of them. Devenv <em>does</em> support the concept of processes, which are just background tasks. Can I apply that Techmint article on How to <a href="https://www.tecmint.com/schedule-job-without-cron-linux/">Schedule a Linux Job Without Cron</a>?</p><p>Sure can:</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">processes.cron.exec</span> <span class="operator">=</span> <span class="string">&quot;while true; do php public/admin/cli/cron.php ; sleep 60 ; done&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>As a bonus, the output will log to process-compose (see <a href="/2024/08/21/Moving-from-nix-flakes-to-devenv/" title="Moving from nix flakes to devenv">Moving from nix flakes to devenv</a> for more on that). One gotcha: you should set Keep alive in Task processing to 0 otherwise the log gets spammed with cron retrying notices. You might want to disable that regardless, per the <a href="https://tracker.moodle.org/browse/MDL-79034">bug report</a> I filed. The Moodle keep alive setting has unpleasant consequences if you’re hosting on AWS or somewhere else with a consumption model.</p>]]></content>
    
    
    <summary type="html">Configuring a cron job without a crontab</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="Moodle" scheme="https://blog.goodbyeplease.com/tags/Moodle/"/>
    
    <category term="Nix" scheme="https://blog.goodbyeplease.com/tags/Nix/"/>
    
  </entry>
  
  <entry>
    <title>Measuring the Raritan Valley Line</title>
    <link href="https://blog.goodbyeplease.com/2024/08/26/Measuring-the-Raritan-Valley-Line/"/>
    <id>https://blog.goodbyeplease.com/2024/08/26/Measuring-the-Raritan-Valley-Line/</id>
    <published>2024-08-27T00:22:01.000Z</published>
    <updated>2025-02-20T03:07:34.792Z</updated>
    
    <content type="html"><![CDATA[<p>Like many railfans (including the great E. M. Frimbo) I keep track of my mileage. I have a spreadsheet with the trains and routes I’ve been on, including dates and most importantly distances. I can tell you that I passed 100,000 miles on Amtrak on January 7, 2020, on the <em>Capitol Limited</em>, roughly 163 miles west of Washington, DC. This means I can I get a little obsessive about determining mileage, and can send me down a rabbit hole if it’s unclear what distance I traveled.</p><p>Railroads used to include mileage information in their timetables. Amtrak did right up until the discontinuance of paper timetables in the last few years. For railroads in Europe, the best source of information are the railway atlases published by <a href="https://www.ekshop.de/buecher/Schweers-Wall/">Schweers + Wall</a>. These maps are extraordinarily detailed, showing lines and distances (in kilometers). For the US, the best source of distance are <a href="https://en.wikipedia.org/wiki/Working_timetable">employee timetables</a>. As the source suggests, these are internal documents used by employees. They show distances, sidings, speed limits, and include various rules governing operation. Distance doesn’t change all that often, so older employee timetables can still be useful.</p><p>I’ve made 14 trips on NJ Transit’s <a href="https://en.wikipedia.org/wiki/Raritan_Valley_Line">Raritan Valley Line</a> since 2016. But first, a nomenclature issue. The Raritan Valley Line is both a physical piece of infrastructure and a <em>service</em> that uses that infrastructure and the two are <strong>not</strong> coterminous. The <em>service</em> runs from High Bridge, New Jersey (Raritan on weekdays) to Newark, New Jersey. A limited number of trains continue from Newark to Pennsylvania Station in New York, but usually you transfer in New York.</p><p>The <em>infrastructure</em> is that part of the former Central Railroad of New Jersey main line that the state bought. It also starts at High Bridge, but it’s been abandoned east of Aldene (see <a href="https://en.wikipedia.org/wiki/Aldene_Connection">Aldene Connection</a> on Wikipedia for the gory details). From Aldene, the service uses part of the former Lehigh Valley Railroad main line to reach Amtrak’s Northeast Corridor. Conrail owns this portion. Finally, the service uses the Northeast Corridor for a little under two miles to reach Newark Penn.</p><p>A train running from Raritan to Newark uses lines built by the Central Railroad of New Jersey, Lehigh Valley Railroad, and Pennsylvania Railroad (Northeast Corridor). A public timetable would just show the mileage from New York City; employee timetables will show the mileage based on a particular lines termini, and in this case those don’t match up. The building of the Aldene Connection is a further complication; employee timetables from before 1967 won’t have the right information. You also can’t blindly trust the milepost that a station is located at; all modern internal timetables place Newark Penn at MP 8.8. Newark is 10 miles from New York Penn.</p><p>Last week I acquired an NJ Transit employee timetable (2005 vintage, new enough) that helped me resolve all these quandaries and determine my mileage from Raritan. First, all mileage on the ex-CNJ is still reckoned based on the long-disused <a href="https://en.wikipedia.org/wiki/Central_Railroad_of_New_Jersey_Terminal">Communipaw Terminal</a>. Raritan is at MP 35.9; the Aldene Connection is MP 15.0. That’s 20.9 miles. From Aldene we’re on the ex-Lehigh Valley; the Lehigh Valley main line started at 1.0 in Jersey City; <a href="http://www.lvrr.anthraciterailroads.org/lvrr-operations/on-line-customers-and-interchange-traffic/on-line-customers/new-york-division-main-line/">the 0.0 signified barge service</a> across the Hudson to Manhattan. No, the Hudson isn’t exactly a mile across. Aldene is MP 16.9 on the Lehigh Line. Newark is MP 8.8; so that’s 8.1 miles.</p><p>If you’re still here you might object that Newark is Pennsylvania Railroad territory and there should be a mismatch. I agree and there isn’t. I found a <a href="https://drive.google.com/file/d/1yhJ8x8F-7D8F5zSI11p_mQmAUwGUBHGh/view">Pennsylvania Railroad employee timetable</a> from 1939 that shows Newark at 10 miles from New York and Hunter, roughly where the Lehigh Valley Railroad connects, at 11.8 (it’s at 10.5 now). In the absence of evidence I’ll blame Conrail for this. Anyway, it’s 10 miles from Newark to New York. Amtrak deals with the numbering issue when you get to Harold Interlocking, between Newark and Secaucus Junction. It’s indicated as “MP 8.3/7.2”, and it’s about .1 mile across. Congratulations, everything adds up now.</p><p>That’s the story of calculating the distance from Raritan to New York Penn. Raritan, located at MP 35.9 on the Raritan Valley Line, is 39 miles from New  York on a Raritan Valley Line train.</p>]]></content>
    
    
    <summary type="html">An abstruse exercise in calculating railroad mileage.</summary>
    
    
    
    <category term="Travel" scheme="https://blog.goodbyeplease.com/categories/Travel/"/>
    
    
    <category term="NJ Transit" scheme="https://blog.goodbyeplease.com/tags/NJ-Transit/"/>
    
    <category term="Raritan Valley Line" scheme="https://blog.goodbyeplease.com/tags/Raritan-Valley-Line/"/>
    
    <category term="Lehigh Line" scheme="https://blog.goodbyeplease.com/tags/Lehigh-Line/"/>
    
  </entry>
  
  <entry>
    <title>Around Long Island Sound</title>
    <link href="https://blog.goodbyeplease.com/2024/08/24/Around-Long-Island-Sound/"/>
    <id>https://blog.goodbyeplease.com/2024/08/24/Around-Long-Island-Sound/</id>
    <published>2024-08-25T03:36:47.000Z</published>
    <updated>2025-02-20T03:07:34.765Z</updated>
    
    <content type="html"><![CDATA[<p>It started over a cup of coffee. My friend Nate and I were having coffee at <a href="https://threebirdscoffee.com/">ThreeBirds</a>. I was back from HighEdWeb North Carolina and getting ready for WPCampus. He was basking in a delightful trip <a href="https://lifeafterdigital.com/2024/07/06/trains-museums-and-books-a-respite/">that he’d taken to DC</a> recently and was interested in replicating the experience–a trip taken for the trip’s sake. We didn’t set ourselves many parameters, save that we’d like to knock it out over a weekend and we wanted to travel by train wherever possible. We settled on circling <a href="https://en.wikipedia.org/wiki/Long_Island_Sound">Long Island Sound</a>.</p><p>Long Island stretches 118 miles, from New York City to the Atlantic Ocean. North of it lies Connecticut. There are two ferries that cross it, one between Bridgeport and Port Jefferson, about halfway across; the other between Orient Point and New London, at the eastern end of the island. The Long Island Rail Road comes within a mile of one ferry and eight miles of the other. The various rail services on the Northeast Corridor have direct service to the ferry terminals in Connecticut. We devised a plan involving eight trains, three ferries, and two buses. Looks simple on the map, right?</p><iframe src="https://www.google.com/maps/d/u/0/embed?mid=1PZo7IR3VUDlD1DDTSE923ciyLXc0NeA" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe><h2><span id="the-trip">The trip</span></h2><p>I maintained a pretty lively account of the trip on Mastodon. You can start the thread with <a href="https://higheredweb.social/@mackensen/112973980120404942">my post from our arrival in Denville</a> which I’ve embedded below. All told we were on the road for 56 hours, crossed Long Island Sound twice, and did roughly 289.1 miles by train.</p><iframe src="https://higheredweb.social/@mackensen/112973980120404942/embed" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe><h2><span id="reflections">Reflections</span></h2><p>I’ve spent the last week thinking about what worked and what could have been better.</p><h3><span id="transport-providers">Transport providers</span></h3><p>We dealt with seven different transit providers over the weekend:</p><ol><li>NJ Transit</li><li>NY Waterway (ferry from Hoboken)</li><li>Metropolitan Transportation Authority (New York Subway, Long Island Rail Road, Metro-North Railroad)</li><li>Suffolk County Transit</li><li>Cross Sound Ferry (Orient Point to New London)</li><li>Shore Line East</li><li>Bridgeport &amp; Port Jefferson Ferry</li></ol><p>We bought NJ Transit tickets on the platform at Denville and again at New York Penn on the way back; there’s also the <a href="https://www.njtransit.com/tickets/app-and-mobile-tickets">NJ Transit Mobile App</a> which we didn’t have. We bought the NY Waterway tickets at the ticket office in Hoboken; they also have the <a href="https://nywaterway.bytemark.co/">NY Waterway App</a> which I installed but didn’t use. We used tap-to-pay or single-use <a href="https://new.mta.info/fares">https://new.mta.info/fares</a> for the New York City Subway and bought individual tickets on the Long Island Rail  Road and Metro-North Railroad. We didn’t know about the <a href="https://new.mta.info/traintime">TrainTime app</a> and didn’t use it.</p><p>We <em>did</em> install and use the <a href="https://sctbus.org/">Suffolk FastFare</a> app for the buses in Suffolk County. Fares are $2.25, transfers are a quarter, and it didn’t seem likely we’d be carrying exact change. Neither <a href="https://www.longislandferry.com/">Cross Sound Ferry</a> nor <a href="https://www.88844ferry.com/">Bridgeport &amp; Port Jefferson Ferry</a> have apps; both support booking in advance through their websites, and both have staffed ticket offices. Shore Line East is part of the CT rail umbrella and uses the <a href="https://shorelineeast.com/ticket-types/">CTrail eTix app</a>. We bought tickets in person at New London Union Station. The tickets are issued on Amtrak ticket stock, and Amtrak sells Shore Line East tickets through its website.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> Amtrak cross-honors Shore Line East tickets on select trains, and Shore Line East tickets are valid for service beyond New Haven to New York Grand Central.</p><p>That’s a gaggle of transit providers and apps. I don’t know if the average rider would have the patience to plan all this out. Aggregator sites like Rome2Rio are helpful in identifying transit providers, but you’re still doing some work to identify all the different tickets you’ll need and how to pay for them. One of the reason I eschewed apps is that I wanted to see how hard it would be to make this trip without them. Answer: it wasn’t. We only used the Suffolk County Transit app for want of quarters and there were either ticket sellers or vending machines everywhere else.</p><p>I dream of a far future where I could buy a ticket for Denville to Orient Point without worrying too deeply about all the different providers and their fare policies. The political complexity alone is staggering. It’s a nice thought though.</p><h3><span id="infrastructure">Infrastructure</span></h3><p>For the most part signage and wayfinding weren’t problems, but there are a few challenges worth mentioning:</p><ol><li>Driving to Denville, there is no sign on East Main Street indicating that you should turn on Estling Lake Road to access Denville station (and its parking lot).</li><li>Maybe it was just early on Saturday morning, but Grand Central Madison was surprisingly difficult to find under the circumstances. Allegedly there’s access from Lexington Avenue but we never found it. It <em>is</em> accessible from Grand Central Terminal, and there’s probably the easiest option. It’s well-signed with the station complex.</li><li>There were no bus stop signs in Port Jefferson, New York. <em>At all</em>. We walked up and down Main Street (NY 25A), guided by Google Maps, the Transit app, and the Suffolk County Transit website. Ultimately we flagged down our bus, but not without a good deal of anxiety. That, coupled with the massive “<a href="https://higheredweb.social/@mackensen/112984795224953052">In Trump We Trust</a>” banner that greets you coming off the ferry, contributed to an overall poor impression of Port Jefferson.</li></ol><p>Let me also flag a few wins:</p><ol><li>There’s good signage throughout Hoboken Terminal linking the train platforms, the light rail line, and the ferry piers.</li><li>The primary bus stop in Greenport at 1st and Adams is signed and has a shelter.</li><li>In both New London and Bridgeport the ferry terminals are in line-of-sight of the train stations and there are signs guiding you from one to the other.</li></ol><h3><span id="planning">Planning</span></h3><p>Overall this trip worked really well. One thing I wish we’d done at the time–and could have done–was to spend more time in Greenport. We both liked the town. The ferry and bus schedules would have accommodated a later departure. I’d looked at Greenport as the transfer point from the Long Island Rail Road to the bus that would take us to the ferry, and I’d allowed time for lunch, but hadn’t really considered what we’d <em>do</em> in Greenport. The result was that we hit New London in late afternoon, too late to do anything there besides a nice dinner. A counterargument to the above is that the Adirondack chairs on the MV <em>Susan Anne</em> were really nice.</p><h2><span id="whats-next">What’s next?</span></h2><p>We both had a really good time and would like to do a similar trip some time. The SEPTA network in Philly, despite its proximity, remains unexplored. Two years ago I cooked up a plan that touched Philadelphia, Norristown, Trenton by way of the River Line, and a walking transfer from Bethayres to Fox Chase. MARC has its own line between Baltimore and DC, and occasional service to Harpers Ferry. There’s the LIRR line to Montauk, and a ferry connection to Block Island. I’ve visited Port Jervis by car and always wanted to travel on the former Erie main line down to Hoboken.</p><p>Stay tuned.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Only between New London and New Haven Union Station. If you search for New London to Bridgeport, you only see Amtrak services. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">Weekend trip around Long Island Sound by train, ferry, and bus.</summary>
    
    
    
    <category term="Travel" scheme="https://blog.goodbyeplease.com/categories/Travel/"/>
    
    
    <category term="Amtrak" scheme="https://blog.goodbyeplease.com/tags/Amtrak/"/>
    
    <category term="NJ Transit" scheme="https://blog.goodbyeplease.com/tags/NJ-Transit/"/>
    
    <category term="Metro-North Railroad" scheme="https://blog.goodbyeplease.com/tags/Metro-North-Railroad/"/>
    
    <category term="Long Island Rail Road" scheme="https://blog.goodbyeplease.com/tags/Long-Island-Rail-Road/"/>
    
    <category term="Shore Line East" scheme="https://blog.goodbyeplease.com/tags/Shore-Line-East/"/>
    
    <category term="Suffolk County Transit" scheme="https://blog.goodbyeplease.com/tags/Suffolk-County-Transit/"/>
    
    <category term="Cross Sound Ferry" scheme="https://blog.goodbyeplease.com/tags/Cross-Sound-Ferry/"/>
    
    <category term="Bridgeport &amp; Port Jefferson Ferry" scheme="https://blog.goodbyeplease.com/tags/Bridgeport-Port-Jefferson-Ferry/"/>
    
    <category term="New York City Subway" scheme="https://blog.goodbyeplease.com/tags/New-York-City-Subway/"/>
    
  </entry>
  
  <entry>
    <title>Moving from nix flakes to devenv</title>
    <link href="https://blog.goodbyeplease.com/2024/08/21/Moving-from-nix-flakes-to-devenv/"/>
    <id>https://blog.goodbyeplease.com/2024/08/21/Moving-from-nix-flakes-to-devenv/</id>
    <published>2024-08-22T01:37:00.000Z</published>
    <updated>2025-02-20T03:07:34.794Z</updated>
    
    <content type="html"><![CDATA[<p>Back in October I started <a href="/2023/10/22/This-blog-post-was-written-with-Hexo-and-Nix/" title="This blog post was written with Hexo and Nix">using Nix</a> to run my local authoring environment. I stayed with it, found other use cases for Nix, and then co-presented (with <a href="https://hachyderm.io/@woodwardjd">Jason Woodward</a>) at <a href="https://2024.wpcampus.org/">WPCampus 2024</a> on “<a href="https://2024.wpcampus.org/schedule/using-nix-to-define-wordpress-dev-and-test-environments/">Using Nix to Define WordPress Dev and Test Environments</a>.” The monster has definitely escaped the laboratory at this point.</p><p>While working up that talk I discovered <a href="https://devenv.sh/">devenv</a>. I think of devenv as a wrapper or overlay for Nix flakes and it does two things that I immediately found useful:</p><ol><li>It wraps the complex Nix syntax into a set of declarations for adding languages, processes, and services.</li><li>It provides a text-based interface for managing those processes and services.</li></ol><p>Hexo needs a NodeJS environment and a few background processes: one task for watching and regenerating the static files, and a simple web server for previewing results. I was able to accomplish this with a flake but it wasn’t perfect. Starting <code>hexo server</code> and <code>hexo generate --watch</code> in my existing shell meant that if I ever used Ctrl-C I killed those tasks, and it wasn’t obvious when they were still running, so I got in the habit of running <code>killall hexo</code> when I was done.</p><p>Adding NodeJS support is straightforward; Javascript is a supported language, and there are specific options for enabling yarn:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">languages.javascript = <span class="punctuation">&#123;</span></span><br><span class="line">  enable = <span class="literal"><span class="keyword">true</span></span>;</span><br><span class="line">  package = pkgs.nodejs_20;</span><br><span class="line">  yarn.enable = <span class="literal"><span class="keyword">true</span></span>;</span><br><span class="line">  yarn.install.enable = <span class="literal"><span class="keyword">true</span></span>;</span><br><span class="line"><span class="punctuation">&#125;</span>;</span><br></pre></td></tr></table></figure><p>Devenv has a concept of a <a href="https://devenv.sh/processes/">process</a>, which lets you declare, run, and monitor a background task. For Hexo I declare two:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">processes.hexo-server.exec = <span class="string">&quot;npx hexo server&quot;</span>;</span><br><span class="line">processes.hexo-generate.exec = <span class="string">&quot;npx hexo generate --watch&quot;</span>;</span><br></pre></td></tr></table></figure><p>The <code>devenv up</code> command executes <a href="https://github.com/F1bonacc1/process-compose">process-compose</a> by default, and I get a nice text-based window which shows me both processes and their output:</p><p><img src="process-compose.png" alt="Process-compose showing both processes; hexo has just regenerated this post" title="Text-based listed of processes"></p><p>My workflow, then, involves two terminal windows. In the first I run <code>devenv up</code> to start and control the processes, and in the second I run <code>devenv shell</code>, which approximates what <code>nix develop</code> did before. This was easier to setup than the flake, and process-compose is a nice win.</p>]]></content>
    
    
    <summary type="html">Using the Hexo static site platform with devenv.</summary>
    
    
    
    <category term="Web Development" scheme="https://blog.goodbyeplease.com/categories/Web-Development/"/>
    
    
    <category term="Hexo" scheme="https://blog.goodbyeplease.com/tags/Hexo/"/>
    
    <category term="Nix" scheme="https://blog.goodbyeplease.com/tags/Nix/"/>
    
  </entry>
  
  <entry>
    <title>Night of the Demon</title>
    <link href="https://blog.goodbyeplease.com/2024/07/23/Night-of-the-Demon/"/>
    <id>https://blog.goodbyeplease.com/2024/07/23/Night-of-the-Demon/</id>
    <published>2024-07-24T00:10:00.000Z</published>
    <updated>2025-02-20T03:07:34.796Z</updated>
    
    <content type="html"><![CDATA[<p><em>It’s in the trees, it’s coming!</em></p><p>You’re an academic from the United States and you’re in England to visit a few of your collaborators. You’ve organized a small conference about the work of a fellow academic who leads a Satanic cult. He’s a fraud and you’re  going to expose him. When you arrive in London you find out that one of your collaborators died in a freak accident the night before. There are strange clues in his notes. You visit the British Museum and the arcane work mentioned in the notes is missing. While you’re at the museum the cult leader visits you and after a conversation that is at turns fascinating and disturbing, he informs you that you have three days to live.</p><p><em>Night of the Demon</em> features modern, skeptical people who do not believe in spiritual evil encountering people who not only do believe in that evil but know for a fact that it exists. This is distinct from the original <a href="https://letterboxd.com/film/the-wicker-man/"><em>Wicker Man</em></a> or <em><a href="https://letterboxd.com/film/midsommar/">Midsommar</a></em>; the pagans in those films believe, but neither film provides evidence for the fact of their belief. <em>Night of the Demon</em>, made in 1957, walks a similar path to <a href="https://letterboxd.com/film/the-devil-rides-out/"><em>The Devil Rides Out</em></a>, <a href="https://letterboxd.com/film/rosemarys-baby/"><em>Rosemary’s Baby</em></a>, <a href="https://letterboxd.com/film/the-omen/"><em>The Omen</em></a>, and <a href="https://letterboxd.com/film/the-exorcist/"><em>The Exorcist</em></a>. The execution, however, has some distinct features.</p><p>The antagonist is Dr. Julian Karswell (Niall MacGinnis, the head of the island in <a href="https://letterboxd.com/film/island-of-terror/"><em>Island of Terror</em></a>), alleged ring-leader of a Satanic cult in England. Opposing him are a group of university professors, psychologists or possibly parapsychologists, who think Karswell is a phony and seek to expose him. In the opening scene one of these men, Professor Harrington (Maurice Denham), pleads with Karswell to rescind a curse placed on him. A short time later, Harrington dies after seeing a demon in the trees. The next morning, Dr. John Holden (Dana Andrews) arrives from the United States to participate in a conference that would expose Karswell. Holden is our protagonist. He meets up with Professor Mark O’Brien (Liam Redmond, Chief Watts in <a href="https://letterboxd.com/film/the-cruel-sea/"><em>The Cruel Sea</em></a>) and Professor Kumar (Peter Elliott) and learns of Harrington’s death. He also encounters Harrington’s niece Joanna (Peggy Cummins).</p><p>The plot unfolds a little differently than you might expect, and it comes down to the differing tone and presentation of the scenes that include Karswell. MacGinnis plays him as a man who knows that demons exist, that magic is real, and that he may have called up that which he cannot put down. The group of academics around Andrews treat Harrington’s death first as an accident, and later perhaps as the work of Karswell’s cult. There’s none of the urgency that surrounds Karswell’s actions. At times, you almost feel as though Karswell is trying to convince Holden that evil exists, and Holden isn’t buying.</p><p>In the film, a curse takes the form of a slip of paper with runes inscribed on it. The bearer of that parchment has a specified time to live. At the appointed hour, the paper burns itself to cinders, and the last man to touch it will face a demon from beyond. The only way to protect yourself (shades of <em><a href="/2024/02/06/It-Follows/" title="It Follows">It Follows</a></em>) is to pass the parchment to someone else. (If this sounds familiar, Sam Raimi’s 2009 film <em><a href="https://letterboxd.com/film/drag-me-to-hell/">Drag Me to Hell</a></em> borrowed this plot element.)</p><p>Holden’s not the sort of man to take any of this seriously. The most frightening runic-inscribed parchment he’s seen to date is a rejection slip from a journal. Even as contrary evidence mounts, including that Karswell slipped a parchment into Holden’s papers, he sees no reason to revisit his priors. Finally, Holden and his collaborators stage a public demonstration with Hobart, a member of Karswell’s cult, who’s been catatonic since Harrington’s death. Under hypnosis, Hobart confirms the story of the parchment and how one led to Harrington’s death. On seeing Holden’s parchment, Hobart becomes terrified, believing that he is marked for death, and jumps to his death.</p><p>These days, that sort of activity would require the approval of Holden’s <a href="https://en.wikipedia.org/wiki/Institutional_review_board">Institutional Review Board</a> (IRB), which would hopefully note all the serious risks involved in exposing a catatonic cult member, under hypnosis, to potentially traumatic stimuli. It wasn’t until the exposure of multiple abuses in the 1970s, most famously the Tuskegee syphilis study, that the US Congress passed the <a href="https://en.wikipedia.org/wiki/National_Research_Act">National Research Act</a> and formalized the IRB process.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> There are no such protections in 1957, but Hobart’s shocking death finally prods Holden into taking action against Karswell.</p><p>Their final encounter takes place on the boat train to Southampton. There’s a wonderful bit of physical comedy that comes when Karswell realizes that Holden now believes, and that Holden is trying to give him the parchment. Holden does, and Karswell chases after it. It burns to cinders, and a fire demon, appearing over the departing steam locomotive, kills Karswell. It’s an excellent sequence to close out the film.</p><p>Some reviewers have faulted the sequences without Karswell as lacking urgency and energy. Certainly, Niall MacGinnis goes all-in on his portrayal. Karswell is both charismatic and unnerving. I really appreciated the two-track approach here. Karswell has made a pact with the devil and knows that evil is real. There’s an implication that his creation (reception?) of the parchments is not voluntary. Meanwhile, Holden and his friends, like Carmichael Haig in <a href="https://letterboxd.com/film/late-night-with-the-devil/"><em>Late Night with the Devil</em></a>, are convinced of their diagnosis and approaching this is an academic exercise. How much urgency would you expect, even with Harrington’s death?</p><p>We watched this via a free trial of the Midnight Pulp channel on Amazon Prime Video. It looked good, and was probably based on the <a href="https://www.blu-ray.com/movies/Night-of-the-Demon-Blu-ray/187651/#Review">Blu-ray release</a> that Powerhouse Films did 2018. This is technically our fourth Jacques Tourneur-directed film; others we’ve seen included the 1944 <a href="https://letterboxd.com/film/cat-people/"><em>Cat People</em></a>, <a href="https://letterboxd.com/film/the-comedy-of-terrors/"><em>The Comedy of Terrors</em></a>, and <a href="https://letterboxd.com/film/war-gods-of-the-deep/"><em>War-Gods of the Deep</em></a>. <em>Cat People</em> was excellent, but this is the first time I really took note of the direction.</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>See <a href="https://en.wikipedia.org/wiki/Human_subject_research_legislation_in_the_United_States">Human subject research legislation in the United States</a> on Wikipedia for a starting point on this important and complex issue. <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">Review of the 1957 horror film Night of the Demon.</summary>
    
    
    
    <category term="Movies" scheme="https://blog.goodbyeplease.com/categories/Movies/"/>
    
    
    <category term="Night of the Demon" scheme="https://blog.goodbyeplease.com/tags/Night-of-the-Demon/"/>
    
    <category term="Jacques Tourneur" scheme="https://blog.goodbyeplease.com/tags/Jacques-Tourneur/"/>
    
    <category term="Niall MacGinnis" scheme="https://blog.goodbyeplease.com/tags/Niall-MacGinnis/"/>
    
    <category term="Dana Andrews" scheme="https://blog.goodbyeplease.com/tags/Dana-Andrews/"/>
    
  </entry>
  
</feed>
